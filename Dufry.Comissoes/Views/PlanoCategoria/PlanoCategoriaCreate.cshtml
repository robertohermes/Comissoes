@model PlanoCategoriaViewModel

@{
    ViewBag.Title = "Inclusão de Planos de Comissões e Hierarquias";
}

<h1 class="headerForm">@ViewBag.Title</h1>


@using (Html.BeginForm()) 
{
    @*@Html.AntiForgeryToken()*@

    <div class="editorCategoria">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <p>
            @Html.LabelFor(model => model.PlanoCategoria.ID_PLANO)
            @Html.DropDownListFor(model => model.PlanoCategoria.ID_PLANO, Model.PlanosSelectListItem, "--- Selecione ---", new { @class = "autocomplete-combobox", @style = "padding-left: 7px;!important" })
            @Html.ValidationMessageFor(model => model.PlanoCategoria.ID_PLANO, String.Empty, new { @style = "padding-left: 40px;!important" })
        </p>
        @*<p>
            @Html.LabelFor(model => model.PlanoCategoria.ATRIBUTO)
            @Html.EditorFor(model => model.PlanoCategoria.ATRIBUTO)
            @Html.ValidationMessageFor(model => model.PlanoCategoria.ATRIBUTO, String.Empty, new { @style = "padding-left: 10px;!important" })
        </p>*@
        @*<p>
            @Html.LabelFor(model => model.PlanoCategoria.CODIGOLOJAALTERNATE)
            @Html.DropDownListFor(model => model.PlanoCategoria.CODIGOLOJAALTERNATE, Model.LojasSelectListItem, "--- Selecione ---", new { @class = "autocomplete-combobox", @style = "padding-left: 7px;!important" })
            @Html.ValidationMessageFor(model => model.PlanoCategoria.CODIGOLOJAALTERNATE, String.Empty, new { @style = "padding-left: 40px;!important" })
        </p>
        <p>
            @Html.LabelFor(model => model.PlanoCategoria.PERCENTUAL)
            @Html.TextBoxFor(model => model.PlanoCategoria.PERCENTUAL, null, new { @class = "decimal", @Value = Model.PlanoCategoria.PERCENTUAL.ToString().Equals("0") ? string.Empty : Model.PlanoCategoria.PERCENTUAL.ToString("0") })
            @Html.ValidationMessageFor(model => model.PlanoCategoria.PERCENTUAL, String.Empty, new { @style = "padding-left: 10px;!important" })
        </p>
        <p>
            @Html.LabelFor(model => model.PlanoCategoria.DT_INI)
            @Html.TextBoxFor(model => model.PlanoCategoria.DT_INI, null, new { @class = "dp", @Value = Model.PlanoCategoria.DT_INI.ToString().Equals("01/01/0001 00:00:00") ? string.Empty : Model.PlanoCategoria.DT_INI.ToString("dd/MM/yyyy") })
            @Html.ValidationMessageFor(model => model.PlanoCategoria.DT_INI, String.Empty, new { @style = "padding-left: 10px;!important" })
        </p>
        <p>
            @Html.LabelFor(model => model.PlanoCategoria.DT_FIM)
            @Html.TextBoxFor(model => model.PlanoCategoria.DT_FIM, null, new { @class = "dp", @Value = Model.PlanoCategoria.DT_FIM.ToString().Equals("01/01/0001 00:00:00") ? string.Empty : Model.PlanoCategoria.DT_FIM.ToString("dd/MM/yyyy") })
            @Html.ValidationMessageFor(model => model.PlanoCategoria.DT_FIM, String.Empty, new { @style = "padding-left: 10px;!important" })
        </p>

        <p>
            @Html.LabelFor(model => model.PlanoCategoria.STATUS)
            @Html.RadioButtonFor(model => model.PlanoCategoria.STATUS, "A") Ativo
            @Html.RadioButtonFor(model => model.PlanoCategoria.STATUS, "I") Inativo
            @Html.ValidationMessageFor(model => model.PlanoCategoria.STATUS, String.Empty, new { @style = "padding-left: 127px;!important" })
        </p>*@

    </div>

    <input type="submit" id="salvaPlanoCategoria" value="Salvar e incluir" class="botoesCategoria" />
    @Html.ActionLink("Voltar", "PlanoCategoriaIndex", "PlanoCategoria", new { @statusSearchString = "A" }, new { @class = "botoesCategoria" })

}


@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('.dp').datepicker({
                showAnim: "scale",
                showOptions: {
                    origin: ["top", "right"]
                }
            });
        });

        //$(document).ready(function () {
        //    $('.dp').mask('00/00/0000', { 'translation': { 0: { pattern: /[0-9]/ } } });
        //    //$('.decimal').mask('000,0000', { reverse: true });

        //    $("input[name='PlanoCategoria.DT_FIM']").rules("add", {
        //        DateGtEq: $("input[name='PlanoCategoria.DT_INI']"),
        //        messages: { DateGtEq: "A data final da vigência deve ser maior que a data inicial" }
        //    });

        //});

        //using combobox() function of jquery ui autocomplete hides the <select> tag generated by the DropDownListFor() 
        //method and renders its own html.
        //By default, hidden form controls are not validated by jquery.validate. This behaviour can be modified using the code above,
        //which will validate all hidden form controls, or to keep ignoring all hidden elements except your select
        $.validator.setDefaults({
            //validate all hidden form controls - ignore: [] 
            //ignore all hidden elements except those who are listed:
            ignore: ':hidden:not(#PlanoCategoria_ID_CATEGORIA)'
        });

    </script>
}



